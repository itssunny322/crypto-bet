{"ast":null,"code":"var _jsxFileName = \"/home/siddharth/new/crypto-bet/src/components/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport DAIABI from \"../abis/DAI.json\";\nimport BetABI from \"../abis/Bet.json\";\nimport BetOracleABI from \"../abis/BetOracle.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [userDAIbalance, setuserDAIbalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [allBettableEvents, setAllBettableEvents] = useState([]);\n  const [eventDetail, setEventDetail] = useState([]);\n  const DAIContractAddress = process.env.REACT_APP_DAI_CONTRACT_ADDRESS;\n  const BetContractAddress = process.env.REACT_APP_Bet_CONTRACT_ADDRESS;\n  const BetOracleContractAddress = process.env.REACT_APP_BetOracle_CONTRACT_ADDRESS;\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  const connectWalletHandler = async () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log(\"MetaMask Here!\");\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        setDefaultAccount(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n        getAccountBalance(result[0]);\n        showBalance();\n        showBettableEvents();\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  }; // update account, will cause reload the page\n\n\n  const accountChangedHandler = () => {\n    window.location.reload();\n  };\n\n  const getAccountBalance = account => {\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [account, \"latest\"]\n    }).then(balance => {\n      setUserBalance(ethers.utils.formatEther(balance));\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  const showBalance = async () => {\n    await provider.send(\"eth_requestAccounts\", []);\n    const signerAddress = await signer.getAddress();\n    const daiContract = new ethers.Contract(DAIContractAddress, DAIABI, signer);\n    const balance = await daiContract.balanceOf(signerAddress);\n    setuserDAIbalance(ethers.utils.formatEther(balance));\n    console.log(\"Balance:\", balance);\n  };\n\n  const showBettableEvents = async () => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(BetOracleContractAddress, BetOracleABI, signer);\n    const events = await betContract.getBettableEvents();\n    console.log(\"Events:\", events);\n    setAllBettableEvents(events);\n  };\n\n  const showEventDetails = async eventId => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(BetOracleContractAddress, BetOracleABI, signer);\n    const event = await betContract.getEvent(eventId);\n    setEventDetail(event);\n  }; // listen for account changes\n\n\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circle Bet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"walletCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWalletHandler,\n        children: connButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balanceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance (Eth): \", userBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balanceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance (DAI): \", userDAIbalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventsDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bettable Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allBettableEvents.map(event => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [event, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => showEventDetails(event),\n              children: \"Click here to get details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), console.log(eventDetail), \"Category : \", eventDetail.name]\n          }, event, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"T2aFZf0vx9/EEQLJGX+UlDtrkxo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/siddharth/new/crypto-bet/src/components/home.js"],"names":["React","useState","ethers","DAIABI","BetABI","BetOracleABI","Home","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","userDAIbalance","setuserDAIbalance","connButtonText","setConnButtonText","allBettableEvents","setAllBettableEvents","eventDetail","setEventDetail","DAIContractAddress","process","env","REACT_APP_DAI_CONTRACT_ADDRESS","BetContractAddress","REACT_APP_Bet_CONTRACT_ADDRESS","BetOracleContractAddress","REACT_APP_BetOracle_CONTRACT_ADDRESS","provider","providers","Web3Provider","window","ethereum","signer","getSigner","connectWalletHandler","isMetaMask","console","log","request","method","then","result","getAccountBalance","showBalance","showBettableEvents","catch","error","message","accountChangedHandler","location","reload","account","params","balance","utils","formatEther","chainChangedHandler","send","signerAddress","getAddress","daiContract","Contract","balanceOf","betContract","betOracleContract","events","getBettableEvents","showEventDetails","eventId","event","getEvent","on","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport DAIABI from \"../abis/DAI.json\";\nimport BetABI from \"../abis/Bet.json\";\nimport BetOracleABI from \"../abis/BetOracle.json\";\n\nconst Home = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [userDAIbalance, setuserDAIbalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [allBettableEvents, setAllBettableEvents] = useState([]);\n  const [eventDetail, setEventDetail] = useState([]);\n\n  const DAIContractAddress = process.env.REACT_APP_DAI_CONTRACT_ADDRESS;\n  const BetContractAddress = process.env.REACT_APP_Bet_CONTRACT_ADDRESS;\n  const BetOracleContractAddress =\n    process.env.REACT_APP_BetOracle_CONTRACT_ADDRESS;\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  const connectWalletHandler = async () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log(\"MetaMask Here!\");\n\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          setDefaultAccount(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n          getAccountBalance(result[0]);\n          showBalance();\n          showBettableEvents();\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause reload the page\n  const accountChangedHandler = () => {\n    window.location.reload();\n  };\n\n  const getAccountBalance = (account) => {\n    window.ethereum\n      .request({ method: \"eth_getBalance\", params: [account, \"latest\"] })\n      .then((balance) => {\n        setUserBalance(ethers.utils.formatEther(balance));\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  const showBalance = async () => {\n    await provider.send(\"eth_requestAccounts\", []);\n    const signerAddress = await signer.getAddress();\n    const daiContract = new ethers.Contract(DAIContractAddress, DAIABI, signer);\n    const balance = await daiContract.balanceOf(signerAddress);\n    setuserDAIbalance(ethers.utils.formatEther(balance));\n    console.log(\"Balance:\", balance);\n  };\n\n  const showBettableEvents = async () => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(\n      BetOracleContractAddress,\n      BetOracleABI,\n      signer\n    );\n    const events = await betContract.getBettableEvents();\n    console.log(\"Events:\", events);\n    setAllBettableEvents(events);\n  };\n\n  const showEventDetails = async (eventId) => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(\n      BetOracleContractAddress,\n      BetOracleABI,\n      signer\n    );\n    const event = await betContract.getEvent(eventId);\n    setEventDetail(event);\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  return (\n    <div className=\"home\">\n      <h1>Circle Bet</h1>\n\n      <div className=\"walletCard\">\n        <button onClick={connectWalletHandler}>{connButtonText}</button>\n        <div className=\"accountDisplay\">\n          <h3>Address: {defaultAccount}</h3>\n        </div>\n        <div className=\"balanceDisplay\">\n          <h3>Balance (Eth): {userBalance}</h3>\n        </div>\n        <div className=\"balanceDisplay\">\n          <h3>Balance (DAI): {userDAIbalance}</h3>\n        </div>\n      </div>\n\n      <div className=\"eventsDisplay\">\n        <h3>Bettable Events</h3>\n        <ul>\n          {allBettableEvents.map((event) => {\n            return (\n              <li key={event}>\n                <h3>{event} </h3>\n                <button onClick={() => showEventDetails(event)}>\n                  Click here to get details\n                </button>\n                {console.log(eventDetail)}\n                Category : {eventDetail.name}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}