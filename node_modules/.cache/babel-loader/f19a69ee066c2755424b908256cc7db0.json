{"ast":null,"code":"var _jsxFileName = \"/home/siddharth/new/crypto-bet/src/components/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport DAIABI from \"../abis/DAI.json\";\nimport BetABI from \"../abis/Bet.json\";\nimport BetOracleABI from \"../abis/BetOracle.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [userDAIbalance, setuserDAIbalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [allBettableEvents, setAllBettableEvents] = useState([]);\n  const [eventDetail, setEventDetail] = useState([]);\n  const DAIContractAddress = process.env.REACT_APP_DAI_CONTRACT_ADDRESS;\n  const BetContractAddress = process.env.REACT_APP_Bet_CONTRACT_ADDRESS;\n  const BetOracleContractAddress = process.env.REACT_APP_BetOracle_CONTRACT_ADDRESS;\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  useEffect(() => {\n    showBettableEvents();\n\n    for (let i = 0; i < allBettableEvents.length; i++) {\n      console.log(allBettableEvents[i], \"d\");\n      showEventDetails(allBettableEvents[i]);\n      console.log(eventDetail, \"hi\");\n    }\n  }, [defaultAccount]);\n\n  const connectWalletHandler = async () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log(\"MetaMask Here!\");\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        setDefaultAccount(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n        getAccountBalance(result[0]);\n        showBalance();\n        showBettableEvents();\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  }; // update account, will cause reload the page\n\n\n  const accountChangedHandler = () => {\n    window.location.reload();\n  };\n\n  const getAccountBalance = account => {\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [account, \"latest\"]\n    }).then(balance => {\n      setUserBalance(ethers.utils.formatEther(balance));\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  const showBalance = async () => {\n    await provider.send(\"eth_requestAccounts\", []);\n    const signerAddress = await signer.getAddress();\n    const daiContract = new ethers.Contract(DAIContractAddress, DAIABI, signer);\n    const balance = await daiContract.balanceOf(signerAddress);\n    setuserDAIbalance(ethers.utils.formatEther(balance));\n    console.log(\"Balance:\", balance);\n  };\n\n  const showBettableEvents = async () => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(BetOracleContractAddress, BetOracleABI, signer);\n    const events = await betContract.getBettableEvents(); //console.log(\"Events:\", events);\n\n    setAllBettableEvents(events);\n  };\n\n  const showEventDetails = async eventId => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(BetOracleContractAddress, BetOracleABI, signer);\n    const event = await betContract.getEvent(eventId);\n    console.log(\"here\"); //setArray(oldArray => [...oldArray,newValue] );\n\n    setEventDetail(eventDetail => [...eventDetail, event]);\n  }; // listen for account changes\n\n\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circle Bet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"walletCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWalletHandler,\n        children: connButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balanceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance (Eth): \", userBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balanceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance (DAI): \", userDAIbalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bettable Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Teams\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Bet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [console.log(eventDetail), eventDetail.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [e.teamAname, \" VS \", e.teamBname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success\",\n                    children: \"Bet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 7\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"tShVhgly/IqvpNovbJT4QJRcsTU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/siddharth/new/crypto-bet/src/components/home.js"],"names":["React","useState","useEffect","ethers","DAIABI","BetABI","BetOracleABI","Home","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","userDAIbalance","setuserDAIbalance","connButtonText","setConnButtonText","allBettableEvents","setAllBettableEvents","eventDetail","setEventDetail","DAIContractAddress","process","env","REACT_APP_DAI_CONTRACT_ADDRESS","BetContractAddress","REACT_APP_Bet_CONTRACT_ADDRESS","BetOracleContractAddress","REACT_APP_BetOracle_CONTRACT_ADDRESS","provider","providers","Web3Provider","window","ethereum","signer","getSigner","showBettableEvents","i","length","console","log","showEventDetails","connectWalletHandler","isMetaMask","request","method","then","result","getAccountBalance","showBalance","catch","error","message","accountChangedHandler","location","reload","account","params","balance","utils","formatEther","chainChangedHandler","send","signerAddress","getAddress","daiContract","Contract","balanceOf","betContract","betOracleContract","events","getBettableEvents","eventId","event","getEvent","on","map","e","name","teamAname","teamBname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,gBAAD,CAApD;AACA,QAAM,CAACiB,iBAAD,EAAoBC,oBAApB,IAA4ClB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMqB,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,8BAAvC;AACA,QAAMC,kBAAkB,GAAGH,OAAO,CAACC,GAAR,CAAYG,8BAAvC;AACA,QAAMC,wBAAwB,GAC5BL,OAAO,CAACC,GAAR,CAAYK,oCADd;AAGA,QAAMC,QAAQ,GAAG,IAAI3B,MAAM,CAAC4B,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,QAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,EAAf;AAEAlC,EAAAA,SAAS,CAAC,MAAM;AACdmC,IAAAA,kBAAkB;;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,iBAAiB,CAACqB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjDE,MAAAA,OAAO,CAACC,GAAR,CAAYvB,iBAAiB,CAACoB,CAAD,CAA7B,EAAkC,GAAlC;AACAI,MAAAA,gBAAgB,CAACxB,iBAAiB,CAACoB,CAAD,CAAlB,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAZ,EAAyB,IAAzB;AACD;AACF,GAPQ,EAON,CAACV,cAAD,CAPM,CAAT;;AASA,QAAMiC,oBAAoB,GAAG,YAAY;AACvC,QAAIV,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBU,UAAvC,EAAmD;AACjDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAR,MAAAA,MAAM,CAACC,QAAP,CACGW,OADH,CACW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADX,EAEGC,IAFH,CAESC,MAAD,IAAY;AAChBrC,QAAAA,iBAAiB,CAACqC,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA/B,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACAgC,QAAAA,iBAAiB,CAACD,MAAM,CAAC,CAAD,CAAP,CAAjB;AACAE,QAAAA,WAAW;AACXb,QAAAA,kBAAkB;AACnB,OARH,EASGc,KATH,CASUC,KAAD,IAAW;AAChB3C,QAAAA,eAAe,CAAC2C,KAAK,CAACC,OAAP,CAAf;AACD,OAXH;AAYD,KAfD,MAeO;AACLb,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAhC,MAAAA,eAAe,CAAC,uDAAD,CAAf;AACD;AACF,GApBD,CA1BiB,CAgDjB;;;AACA,QAAM6C,qBAAqB,GAAG,MAAM;AAClCrB,IAAAA,MAAM,CAACsB,QAAP,CAAgBC,MAAhB;AACD,GAFD;;AAIA,QAAMP,iBAAiB,GAAIQ,OAAD,IAAa;AACrCxB,IAAAA,MAAM,CAACC,QAAP,CACGW,OADH,CACW;AAAEC,MAAAA,MAAM,EAAE,gBAAV;AAA4BY,MAAAA,MAAM,EAAE,CAACD,OAAD,EAAU,QAAV;AAApC,KADX,EAEGV,IAFH,CAESY,OAAD,IAAa;AACjB9C,MAAAA,cAAc,CAACV,MAAM,CAACyD,KAAP,CAAaC,WAAb,CAAyBF,OAAzB,CAAD,CAAd;AACD,KAJH,EAKGR,KALH,CAKUC,KAAD,IAAW;AAChB3C,MAAAA,eAAe,CAAC2C,KAAK,CAACC,OAAP,CAAf;AACD,KAPH;AAQD,GATD;;AAWA,QAAMS,mBAAmB,GAAG,MAAM;AAChC;AACA7B,IAAAA,MAAM,CAACsB,QAAP,CAAgBC,MAAhB;AACD,GAHD;;AAKA,QAAMN,WAAW,GAAG,YAAY;AAC9B,UAAMpB,QAAQ,CAACiC,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,UAAMC,aAAa,GAAG,MAAM7B,MAAM,CAAC8B,UAAP,EAA5B;AACA,UAAMC,WAAW,GAAG,IAAI/D,MAAM,CAACgE,QAAX,CAAoB7C,kBAApB,EAAwClB,MAAxC,EAAgD+B,MAAhD,CAApB;AACA,UAAMwB,OAAO,GAAG,MAAMO,WAAW,CAACE,SAAZ,CAAsBJ,aAAtB,CAAtB;AACAjD,IAAAA,iBAAiB,CAACZ,MAAM,CAACyD,KAAP,CAAaC,WAAb,CAAyBF,OAAzB,CAAD,CAAjB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBkB,OAAxB;AACD,GAPD;;AASA,QAAMtB,kBAAkB,GAAG,YAAY;AACrC,UAAMgC,WAAW,GAAG,IAAIlE,MAAM,CAACgE,QAAX,CAAoBzC,kBAApB,EAAwCrB,MAAxC,EAAgD8B,MAAhD,CAApB;AACA,UAAMmC,iBAAiB,GAAG,IAAInE,MAAM,CAACgE,QAAX,CACxBvC,wBADwB,EAExBtB,YAFwB,EAGxB6B,MAHwB,CAA1B;AAKA,UAAMoC,MAAM,GAAG,MAAMF,WAAW,CAACG,iBAAZ,EAArB,CAPqC,CAQrC;;AACArD,IAAAA,oBAAoB,CAACoD,MAAD,CAApB;AACD,GAVD;;AAYA,QAAM7B,gBAAgB,GAAG,MAAO+B,OAAP,IAAmB;AAC1C,UAAMJ,WAAW,GAAG,IAAIlE,MAAM,CAACgE,QAAX,CAAoBzC,kBAApB,EAAwCrB,MAAxC,EAAgD8B,MAAhD,CAApB;AACA,UAAMmC,iBAAiB,GAAG,IAAInE,MAAM,CAACgE,QAAX,CACxBvC,wBADwB,EAExBtB,YAFwB,EAGxB6B,MAHwB,CAA1B;AAKA,UAAMuC,KAAK,GAAG,MAAML,WAAW,CAACM,QAAZ,CAAqBF,OAArB,CAApB;AACAjC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAR0C,CAS1C;;AACApB,IAAAA,cAAc,CAACD,WAAW,IAAI,CAAC,GAAGA,WAAJ,EAAiBsD,KAAjB,CAAhB,CAAd;AACD,GAXD,CA1FiB,CAuGjB;;;AACAzC,EAAAA,MAAM,CAACC,QAAP,CAAgB0C,EAAhB,CAAmB,iBAAnB,EAAsCtB,qBAAtC;AAEArB,EAAAA,MAAM,CAACC,QAAP,CAAgB0C,EAAhB,CAAmB,cAAnB,EAAmCd,mBAAnC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEnB,oBAAjB;AAAA,kBAAwC3B;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAA,kCAAcN,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAA,wCAAoBE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAA,wCAAoBE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAgBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAO,UAAA,KAAK,EAAC,OAAb;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,uBACG0B,OAAO,CAACC,GAAR,CAAYrB,WAAZ,CADH,EAERA,WAAW,CAACyD,GAAZ,CAAgBC,CAAC,IAAG;AACnB,kCACC;AAAA,wCAEA;AAAA,4BAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGA;AAAA,6BAAKD,CAAC,CAACE,SAAP,UAAsBF,CAAC,CAACG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHA,eAIA;AAAA,yCAAI;AAAQ,oBAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD;AAQD,aATA,CAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CA1JD;;GAAM1E,I;;KAAAA,I;AA4JN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport DAIABI from \"../abis/DAI.json\";\nimport BetABI from \"../abis/Bet.json\";\nimport BetOracleABI from \"../abis/BetOracle.json\";\n\nconst Home = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [userDAIbalance, setuserDAIbalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [allBettableEvents, setAllBettableEvents] = useState([]);\n  const [eventDetail, setEventDetail] = useState([]);\n\n  const DAIContractAddress = process.env.REACT_APP_DAI_CONTRACT_ADDRESS;\n  const BetContractAddress = process.env.REACT_APP_Bet_CONTRACT_ADDRESS;\n  const BetOracleContractAddress =\n    process.env.REACT_APP_BetOracle_CONTRACT_ADDRESS;\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  useEffect(() => {\n    showBettableEvents();\n    for (let i = 0; i < allBettableEvents.length; i++) {\n      console.log(allBettableEvents[i], \"d\");\n      showEventDetails(allBettableEvents[i]);\n      console.log(eventDetail, \"hi\");\n    }\n  }, [defaultAccount]);\n\n  const connectWalletHandler = async () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log(\"MetaMask Here!\");\n\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          setDefaultAccount(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n          getAccountBalance(result[0]);\n          showBalance();\n          showBettableEvents();\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause reload the page\n  const accountChangedHandler = () => {\n    window.location.reload();\n  };\n\n  const getAccountBalance = (account) => {\n    window.ethereum\n      .request({ method: \"eth_getBalance\", params: [account, \"latest\"] })\n      .then((balance) => {\n        setUserBalance(ethers.utils.formatEther(balance));\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  const showBalance = async () => {\n    await provider.send(\"eth_requestAccounts\", []);\n    const signerAddress = await signer.getAddress();\n    const daiContract = new ethers.Contract(DAIContractAddress, DAIABI, signer);\n    const balance = await daiContract.balanceOf(signerAddress);\n    setuserDAIbalance(ethers.utils.formatEther(balance));\n    console.log(\"Balance:\", balance);\n  };\n\n  const showBettableEvents = async () => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(\n      BetOracleContractAddress,\n      BetOracleABI,\n      signer\n    );\n    const events = await betContract.getBettableEvents();\n    //console.log(\"Events:\", events);\n    setAllBettableEvents(events);\n  };\n\n  const showEventDetails = async (eventId) => {\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const betOracleContract = new ethers.Contract(\n      BetOracleContractAddress,\n      BetOracleABI,\n      signer\n    );\n    const event = await betContract.getEvent(eventId);\n    console.log(\"here\")\n    //setArray(oldArray => [...oldArray,newValue] );\n    setEventDetail(eventDetail => [...eventDetail, event]);\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  return (\n    <div className=\"home\">\n      <h1>Circle Bet</h1>\n\n      <div className=\"walletCard\">\n        <button onClick={connectWalletHandler}>{connButtonText}</button>\n        <div className=\"accountDisplay\">\n          <h3>Address: {defaultAccount}</h3>\n        </div>\n        <div className=\"balanceDisplay\">\n          <h3>Balance (Eth): {userBalance}</h3>\n        </div>\n        <div className=\"balanceDisplay\">\n          <h3>Balance (DAI): {userDAIbalance}</h3>\n        </div>\n      </div>\n\n      <div>\n        <h3>Bettable Events</h3>\n        <ul>\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Teams</th>\n                <th scope=\"col\">Bet</th>\n              </tr>\n            </thead>\n            <tbody>\n              {console.log(eventDetail)}\n   {eventDetail.map(e =>{\n     return(\n      <tr>\n     \n      <td>{e.name}</td>\n      <td>{e.teamAname} VS {e.teamBname}</td>\n      <td><button className=\"btn btn-success\">Bet</button></td>\n    </tr>\n     )\n   })}\n    </tbody>\n          </table>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}