{"ast":null,"code":"var _jsxFileName = \"/home/siddharth/new/crypto-bet/src/components/Wallet.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [amount, setamount] = useState(0);\n  const [acountDetail, setaccountDetail] = useState();\n  const factor = 1000000000000000000;\n  useEffect(() => {\n    async function getDetail() {\n      if (localStorage.getItem(\"account\")) {\n        let account = localStorage.getItem(\"account\");\n        const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n        const betOracleContract = new ethers.Contract(BetOracleContractAddress, BetOracleABI, signer);\n        const accountDetail = await betContract.userTokenBal(account);\n        console.log(accountDetail);\n      } else {\n        alert(\"Please connect wallet\");\n        window.location.href = \"/\";\n      }\n    }\n\n    getDetail();\n  }, []);\n\n  const depositHandler = async amount => {\n    let toWei = ethers.utils.formatEther(amount);\n    console.log(toWei, amount);\n    const daiContract = new ethers.Contract(DAIContractAddress, DAIABI, signer);\n    console.log(BetContractAddress);\n    console.log(DAIContractAddress);\n    const approvetx = await daiContract.approve(BetContractAddress);\n    await approvetx.wait();\n    console.log(\"Approval:\", approvetx);\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const tx = await betContract.deposit(DAIContractAddress, 100000);\n    console.log(\"Deposit:\", tx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"depositCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Deposit DAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount in Wei\",\n      onChange: e => {\n        setamount(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => depositHandler(amount),\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/siddharth/new/crypto-bet/src/components/Wallet.js"],"names":["React","useState","useEffect","ethers","amount","setamount","acountDetail","setaccountDetail","factor","getDetail","localStorage","getItem","account","betContract","Contract","BetContractAddress","BetABI","signer","betOracleContract","BetOracleContractAddress","BetOracleABI","accountDetail","userTokenBal","console","log","alert","window","location","href","depositHandler","toWei","utils","formatEther","daiContract","DAIContractAddress","DAIABI","approvetx","approve","wait","tx","deposit","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AACA,eAAe,YAAY;AACvB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBJ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACK,YAAD,EAAcC,gBAAd,IAAiCN,QAAQ,EAA/C;AACA,QAAMO,MAAM,GAAG,mBAAf;AACAN,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeO,SAAf,GAA0B;AACtB,UAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAmC;AAC/B,YAAIC,OAAO,GAAGF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;AACA,cAAME,WAAW,GAAG,IAAIV,MAAM,CAACW,QAAX,CAAoBC,kBAApB,EAAwCC,MAAxC,EAAgDC,MAAhD,CAApB;AACA,cAAMC,iBAAiB,GAAG,IAAIf,MAAM,CAACW,QAAX,CACxBK,wBADwB,EAExBC,YAFwB,EAGxBH,MAHwB,CAA1B;AAKA,cAAMI,aAAa,GAAG,MAAMR,WAAW,CAACS,YAAZ,CAAyBV,OAAzB,CAA5B;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACH,OAVD,MAWI;AACAI,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAsB,GAAtB;AACH;AACJ;;AACDnB,IAAAA,SAAS;AAEZ,GApBQ,EAoBP,EApBO,CAAT;;AAqBF,QAAMoB,cAAc,GAAG,MAAOzB,MAAP,IAAkB;AACvC,QAAI0B,KAAK,GAAG3B,MAAM,CAAC4B,KAAP,CAAaC,WAAb,CAAyB5B,MAAzB,CAAZ;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAAkB1B,MAAlB;AAEA,UAAM6B,WAAW,GAAG,IAAI9B,MAAM,CAACW,QAAX,CAAoBoB,kBAApB,EAAwCC,MAAxC,EAAgDlB,MAAhD,CAApB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYU,kBAAZ;AACA,UAAME,SAAS,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoBtB,kBAApB,CAAxB;AACA,UAAMqB,SAAS,CAACE,IAAV,EAAN;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBY,SAAzB;AAEA,UAAMvB,WAAW,GAAG,IAAIV,MAAM,CAACW,QAAX,CAAoBC,kBAApB,EAAwCC,MAAxC,EAAgDC,MAAhD,CAApB;AACA,UAAMsB,EAAE,GAAG,MAAM1B,WAAW,CAAC2B,OAAZ,CAAoBN,kBAApB,EAAwC,MAAxC,CAAjB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBe,EAAxB;AACD,GAdD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,eAAjC;AAAkD,MAAA,QAAQ,EAAGE,CAAD,IAAK;AAACpC,QAAAA,SAAS,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA2B;AAA7F;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMd,cAAc,CAACzB,MAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import React from \"react\";\nimport { useState,useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nexport default function () {\n    const [amount,setamount]=useState(0)\n    const [acountDetail,setaccountDetail]= useState()\n    const factor = 1000000000000000000;\n    useEffect(()=>{\n        async function getDetail(){\n            if(localStorage.getItem(\"account\")){\n                let account = localStorage.getItem(\"account\")\n                const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n                const betOracleContract = new ethers.Contract(\n                  BetOracleContractAddress,\n                  BetOracleABI,\n                  signer\n                );\n                const accountDetail = await betContract.userTokenBal(account);\n                console.log(accountDetail)\n            }\n            else{\n                alert(\"Please connect wallet\")\n                window.location.href= \"/\"\n            }\n        }\n        getDetail();\n\n    },[])\n  const depositHandler = async (amount) => {\n    let toWei = ethers.utils.formatEther(amount)\n    console.log(toWei,amount)\n    \n    const daiContract = new ethers.Contract(DAIContractAddress, DAIABI, signer);\n    console.log(BetContractAddress);\n    console.log(DAIContractAddress);\n    const approvetx = await daiContract.approve(BetContractAddress, );\n    await approvetx.wait();\n    console.log(\"Approval:\", approvetx);\n\n    const betContract = new ethers.Contract(BetContractAddress, BetABI, signer);\n    const tx = await betContract.deposit(DAIContractAddress, 100000);\n    console.log(\"Deposit:\", tx);\n  };\n  return (\n    <div className=\"depositCard\">\n      <h3>Deposit DAI</h3>\n      <input type=\"number\" placeholder=\"Amount in Wei\"  onChange={(e)=>{setamount(e.target.value )}}/>\n      <button onClick={() => depositHandler(amount)}>Deposit</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}